name: Build and Deploy

on:
  push:
    branches: [blog]

  workflow_dispatch:

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      npm_config_build_from_source: true
      CI: true
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libcairo2-dev \
            libcairo2 \
            libpango1.0-dev \
            libpangocairo-1.0-0 \
            libjpeg-dev \
            libjpeg-turbo8 \
            libgif-dev \
            libgif7 \
            librsvg2-dev \
            libpixman-1-dev \
            libfreetype6-dev \
            libpng-dev \
            pkg-config \
            python3
          pkg-config --cflags --libs cairo pango || true
          ldconfig -p | grep -E "cairo|pango|jpeg|gif|rsvg" || true
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install
        run: |
          pnpm approve-builds @tailwindcss/oxide canvas esbuild sharp
          pnpm install --ignore-scripts=false

      - name: Rebuild canvas (ensure native binding)
        run: |
          node -p "process.versions" || true
          pnpm rebuild canvas || (echo 'canvas rebuild failed' && exit 1)
          find node_modules -path "*canvas.node" -maxdepth 6 -print || echo 'canvas.node not found'
          ls -R node_modules/.pnpm/canvas@*/node_modules/canvas 2>/dev/null | sed -n '1,120p' || true

      - name: Build
        run: pnpm run build

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/client/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

     # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
